#!/bin/bash

set -e

echo "Starting CUM Report installation and setup..."

if ! git rev-parse --is-inside-work-tree &> /dev/null; then
  echo "Error: This script must be run from the root of a Git repository."
  exit 1
fi

echo "Detected Git repository."

install_package() {
  local package="$1"
  if ! command -v "$package" &> /dev/null; then
    echo "$package not found. Installing..."
    sudo apt update
    sudo apt install -y "$package"
    if [ $? -eq 0 ]; then
      echo "$package installed successfully."
    else
      echo "Error installing $package. Please install it manually and rerun this script."
      exit 1
    fi
  else
    echo "$package is already installed."
  fi
}

install_package "jq"
install_package "curl"

CUM_REPORT_DIR="CUM_report"
mkdir -p "$CUM_REPORT_DIR"

INITIAL_TEX_FILE="$CUM_REPORT_DIR/commit_log.tex"
if [ ! -f "$INITIAL_TEX_FILE" ]; then
  echo "Creating initial LaTeX file: $INITIAL_TEX_FILE"
  cat <<EOF > "$INITIAL_TEX_FILE"
\\documentclass{article}
\\usepackage[utf8]{inputenc}
\\title{Commit Summary Report}
\\author{Generated by CUM Report}
\\date{\\today}
\\begin{document}
\\maketitle
\\tableofcontents
\\section{Introduction}
This document contains summaries of commits in this repository.
\\end{document}
EOF
  echo "Initial LaTeX file created."
else
  echo "Initial LaTeX file already exists."
fi

HOOK_PATH=".git/hooks/pre-push"
echo "Installing pre-push hook..."

read -r -d '' PRE_PUSH_HOOK << 'EOF'
#!/bin/bash

echo "🔥 Running CUM pre-push hook..."

# Get the last commit on current branch
commit=$(git rev-parse HEAD)

# Get the diff
diff=$(git show --format="--pretty=format:" "$commit")

# Prompt
prompt="Summarize the following code changes and explain what they likely achieve at a high level:\n\n$diff"

# vLLM configuration
VLLM_API_URL="http://10.16.246.2:8001/generate"
MODEL_NAME="deepseek-ai/deepseek-moe-16b-chat"

# Format payload
payload=$(printf '{ "prompt": "%s", "model": "%s", "stream": false, "max_tokens": 700 }' "$prompt" "$MODEL_NAME")

# Call API
response=$(curl -s -X POST -H "Content-Type: application/json" -d "$payload" "$VLLM_API_URL")

# Extract response
if echo "$response" | jq -e '.results[0].text'; then
  summary=$(echo "$response" | jq -r '.results[0].text')
  echo -e "✅ Commit summary:\n$summary"
else
  summary="❌ Failed to get summary."
  echo "Error: $response"
fi

# Escape LaTeX characters
escaped_summary=$(echo "$summary" | sed -e 's/\\/\\\\/g' -e 's/{/\\{/g' -e 's/}/\\}/g' \
                                         -e 's/\$/\\\$/g' -e 's/&/\\&/g' -e 's/#/\\#/g' \
                                         -e 's/_/\\_/g' -e 's/%/\\%/g' -e 's/~/\\~{}/g' -e 's/\^/\\^{}/g' \
                                         -e 's/</\\textless{}/g' -e 's/>/\\textgreater{}/g')

# Append LaTeX section
title="Commit Summary - $(date +%Y%m%d_%H%M%S)"
section="\\section{$title}
$escaped_summary
"

echo "$section" >> CUM_report/commit_log.tex
echo "✅ Summary added to CUM_report/commit_log.tex"
EOF

echo "$PRE_PUSH_HOOK" > "$HOOK_PATH"
chmod +x "$HOOK_PATH"

echo "✅ pre-push hook installed successfully."
echo "Push any commit and it will be summarized locally before sending to GitHub."
